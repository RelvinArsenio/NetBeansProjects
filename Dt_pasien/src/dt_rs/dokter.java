/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dt_rs;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ruikenichi
 */
public class dokter extends javax.swing.JFrame {
    
    private DefaultTableModel ttable1;

    /**
     * Creates new form dokter
     */
    public dokter() {
        initComponents();
    }
    
    public void HapusData() {
        txtKdDokter.setText("");
        txtNmDokter.setText("");
        cbJk.setSelectedItem("-");
        txtSpesialis.setText("");
    }
    
    public void HapusData2() {
        txtNmDokter.setText("");
        cbJk.setSelectedItem("-");
        txtSpesialis.setText("");
    }
    
    public void deletetable1() {
        int row = ttable1.getRowCount();
        for (int i = 0; i < row; i++) {
            ttable1.removeRow(0);
        }
    }

    // METODE UNTUK MENAMPILKAN DATA KE TABEL
    public void tampilketabel() {
        try {
            String[] judul = {"Kode Dokter", "Nama Dokter", "Jenis Kelamin", "Spesialis"};
            ttable1 = new DefaultTableModel(null, judul);
            table1.setModel(ttable1);
            jScroll1.getViewport().add(table1);
            table1.setEnabled(true);
            koneksi ObjKoneksi1 = new koneksi();
            Connection connection = ObjKoneksi1.openConnect();
            Statement st1 = connection.createStatement();
            String sql1 = "" + " SELECT kd_dokter, nm_dokter, jns_kelamin, spesialis" + " FROM dokter";
            ResultSet rs1 = st1.executeQuery(sql1);
            while (rs1.next()) {
                String kd_dokter = rs1.getString("kd_dokter");
                String nm_dokter = rs1.getString("nm_dokter");
                String jns_kelamin = rs1.getString("jns_kelamin");
                String spesialis = rs1.getString("spesialis");
                String[] data = {kd_dokter, nm_dokter, jns_kelamin, spesialis};
                ttable1.addRow(data);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error : " + ex);
        }
    }
    
    public void CariData() {
        if (txtKdDokter.getText().equals("")) {
        } else {
            try {
                koneksi ObHrgoneksi1 = new koneksi();
                try (Connection connection = ObHrgoneksi1.openConnect()) {
                    Statement st1 = connection.createStatement();
                    String sql1 = ""
                            + " SELECT dokter.*"
                            + " FROM dokter"
                            + " WHERE kd_dokter ='" + txtKdDokter.getText() + "'";
                    try (ResultSet rs1 = st1.executeQuery(sql1)) {
                        if (rs1.next()) {
                            txtKdDokter.setText(rs1.getString("kd_dokter"));
                            txtNmDokter.setText(rs1.getString("nm_dokter"));
                            txtSpesialis.setText(rs1.getString("spesialis"));
                            cbJk.setSelectedItem(rs1.getString("jns_kelamin"));
                            JOptionPane.showMessageDialog(this, "DATA ADA, SILAHKAN EDIT!!!");
                        } else {
                            JOptionPane.showMessageDialog(this, "DATA TIDAK DITEMUKAN!!!");
                            HapusData2(); //Untuk memanggil class HapusData
                        }
                        tampilketabel(); //Untuk memanggil class tampilketabel
                    }
                }
            } catch (SQLException e) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKdDokter = new javax.swing.JTextField();
        txtNmDokter = new javax.swing.JTextField();
        cbJk = new javax.swing.JComboBox<>();
        txtSpesialis = new javax.swing.JTextField();
        cbUbah = new javax.swing.JButton();
        Simpan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        cbDelete = new javax.swing.JButton();
        jScroll1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        cbCari = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("DATA DOKTER");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(182, 182, 182))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Kode Dokter");

        jLabel3.setText("Nama Dokter");

        jLabel4.setText("Jenis Kelamin");

        jLabel5.setText("Spesialis");

        cbJk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki Laki", "Perempuan" }));

        cbUbah.setText("Ubah");
        cbUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUbahActionPerformed(evt);
            }
        });

        Simpan.setText("Simpan");
        Simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanActionPerformed(evt);
            }
        });

        hapus.setText("Clear");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        cbDelete.setText("Delete");
        cbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDeleteActionPerformed(evt);
            }
        });

        jScroll1.setName("jScroll1"); // NOI18N

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Dokter", "Nama Dokter", "Jenis Kelamin", "Spesialis"
            }
        ));
        jScroll1.setViewportView(table1);

        cbCari.setText("Cari");
        cbCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbUbah)
                                .addGap(18, 18, 18)
                                .addComponent(Simpan)
                                .addGap(54, 54, 54)
                                .addComponent(hapus)))
                        .addGap(58, 58, 58)
                        .addComponent(keluar)
                        .addGap(18, 18, 18)
                        .addComponent(cbDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbJk, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNmDokter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txtSpesialis, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(21, 21, 21)
                        .addComponent(txtKdDokter, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbCari)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKdDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCari))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNmDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbJk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSpesialis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUbah)
                    .addComponent(Simpan)
                    .addComponent(hapus)
                    .addComponent(keluar)
                    .addComponent(cbDelete))
                .addGap(18, 18, 18)
                .addComponent(jScroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(491, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanActionPerformed
        // TODO add your handling code here:
        try {
            koneksi ObHrgoneksi1 = new koneksi();
            try (Connection connection = ObHrgoneksi1.openConnect()) {
                Statement st1 = connection.createStatement();
                String sql1 = "insert into dokter(kd_dokter, nm_dokter, jns_kelamin, spesialis) "
                        + "values('" + txtKdDokter.getText()
                        + "','" + txtNmDokter.getText()
                        + "','" + cbJk.getSelectedItem().toString()
                        + "','" + txtSpesialis.getText() + "')";
                
                int rows1 = st1.executeUpdate(sql1);
                JOptionPane.showMessageDialog(this, "Data Sukses Di Tambahkan!!!");
                tampilketabel();
            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_SimpanActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        tampilketabel();
    }//GEN-LAST:event_formWindowOpened

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        menuUtama form1 = new menuUtama();
        form1.setVisible(true);
    }//GEN-LAST:event_keluarActionPerformed

    private void cbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDeleteActionPerformed
        // TODO add your handling code here:
        try {
            koneksi ObHrgoneksi1 = new koneksi();
            try (Connection connection = ObHrgoneksi1.openConnect()) {
                Statement st1 = connection.createStatement();
                String sql1 = "delete from dokter WHERE kd_dokter='" + txtKdDokter.getText() + "'";
                int rows1 = st1.executeUpdate(sql1);
                
                if (rows1 == 1) {
                    JOptionPane.showMessageDialog(this, "DATA BERHASIL DIHAPUS!!!");
                }
            }
            HapusData();
            tampilketabel();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_cbDeleteActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        HapusData();
    }//GEN-LAST:event_hapusActionPerformed

    private void cbCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCariActionPerformed
        // TODO add your handling code here:
        CariData();
    }//GEN-LAST:event_cbCariActionPerformed

    private void cbUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUbahActionPerformed
        // TODO add your handling code here:
        try {
            koneksi ObHrgoneksi1 = new koneksi();
            try (Connection connection = ObHrgoneksi1.openConnect()) {
                Statement st1 = connection.createStatement();
                
                String sql1 = "update dokter set nm_dokter='" + txtNmDokter.getText()
                        + "',jns_kelamin='" + cbJk.getSelectedItem().toString()
                        + "',spesialis='" + txtSpesialis.getText()
                        + "' WHERE kd_dokter='" + txtKdDokter.getText() + "'";
                int rows1 = st1.executeUpdate(sql1);
                
                if (rows1 == 1) {
                    JOptionPane.showMessageDialog(this, "Sukses Di Edit!!!");
                }
            }
            tampilketabel();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_cbUbahActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new dokter().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Simpan;
    private javax.swing.JButton cbCari;
    private javax.swing.JButton cbDelete;
    private javax.swing.JComboBox<String> cbJk;
    private javax.swing.JButton cbUbah;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScroll1;
    private javax.swing.JButton keluar;
    private javax.swing.JTable table1;
    private javax.swing.JTextField txtKdDokter;
    private javax.swing.JTextField txtNmDokter;
    private javax.swing.JTextField txtSpesialis;
    // End of variables declaration//GEN-END:variables
}
